/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Subnet as PrismaSubnet } from "@prisma/client";

export class SubnetServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SubnetCountArgs, "select">): Promise<number> {
    return this.prisma.subnet.count(args);
  }

  async subnets(args: Prisma.SubnetFindManyArgs): Promise<PrismaSubnet[]> {
    return this.prisma.subnet.findMany(args);
  }
  async subnet(
    args: Prisma.SubnetFindUniqueArgs
  ): Promise<PrismaSubnet | null> {
    return this.prisma.subnet.findUnique(args);
  }
  async createSubnet(args: Prisma.SubnetCreateArgs): Promise<PrismaSubnet> {
    return this.prisma.subnet.create(args);
  }
  async updateSubnet(args: Prisma.SubnetUpdateArgs): Promise<PrismaSubnet> {
    return this.prisma.subnet.update(args);
  }
  async deleteSubnet(args: Prisma.SubnetDeleteArgs): Promise<PrismaSubnet> {
    return this.prisma.subnet.delete(args);
  }
}
