/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BigfixContentResult as PrismaBigfixContentResult,
} from "@prisma/client";

export class BigfixContentResultServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BigfixContentResultCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bigfixContentResult.count(args);
  }

  async bigfixContentResults(
    args: Prisma.BigfixContentResultFindManyArgs
  ): Promise<PrismaBigfixContentResult[]> {
    return this.prisma.bigfixContentResult.findMany(args);
  }
  async bigfixContentResult(
    args: Prisma.BigfixContentResultFindUniqueArgs
  ): Promise<PrismaBigfixContentResult | null> {
    return this.prisma.bigfixContentResult.findUnique(args);
  }
  async createBigfixContentResult(
    args: Prisma.BigfixContentResultCreateArgs
  ): Promise<PrismaBigfixContentResult> {
    return this.prisma.bigfixContentResult.create(args);
  }
  async updateBigfixContentResult(
    args: Prisma.BigfixContentResultUpdateArgs
  ): Promise<PrismaBigfixContentResult> {
    return this.prisma.bigfixContentResult.update(args);
  }
  async deleteBigfixContentResult(
    args: Prisma.BigfixContentResultDeleteArgs
  ): Promise<PrismaBigfixContentResult> {
    return this.prisma.bigfixContentResult.delete(args);
  }
}
