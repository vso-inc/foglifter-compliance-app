/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsInt,
  Max,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
  IsDate,
  IsBoolean,
} from "class-validator";

import { GraphQLBigInt } from "../../util/GraphQLBigInt";
import { ApplicationDeployment } from "../../applicationDeployment/base/ApplicationDeployment";
import { Type } from "class-transformer";
import { AssetConfigurationDetail } from "../../assetConfigurationDetail/base/AssetConfigurationDetail";
import { AssetLocationDetail } from "../../assetLocationDetail/base/AssetLocationDetail";
import { AssetNetworkDetail } from "../../assetNetworkDetail/base/AssetNetworkDetail";
import { AssetSupportDetail } from "../../assetSupportDetail/base/AssetSupportDetail";
import { AttestationHost } from "../../attestationHost/base/AttestationHost";
import { BigfixRequest } from "../../bigfixRequest/base/BigfixRequest";
import { DatasourceDevice } from "../../datasourceDevice/base/DatasourceDevice";
import { EndpointManagementSolution } from "../../endpointManagementSolution/base/EndpointManagementSolution";
import { Exception } from "../../exception/base/Exception";
import { IpAddress } from "../../ipAddress/base/IpAddress";
import { MaintenanceWindow } from "../../maintenanceWindow/base/MaintenanceWindow";
import { OperationsCalendar } from "../../operationsCalendar/base/OperationsCalendar";
import { RebootWindow } from "../../rebootWindow/base/RebootWindow";
import { SubMgmtChangeLog } from "../../subMgmtChangeLog/base/SubMgmtChangeLog";
import { TssChangeLog } from "../../tssChangeLog/base/TssChangeLog";

@ObjectType()
class Asset {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => GraphQLBigInt, {
    nullable: true,
  })
  altId!: bigint | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  appServerId!: number | null;

  @ApiProperty({
    required: false,
    type: () => [ApplicationDeployment],
  })
  @ValidateNested()
  @Type(() => ApplicationDeployment)
  @IsOptional()
  applicationDeployment?: Array<ApplicationDeployment>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => GraphQLBigInt, {
    nullable: true,
  })
  applicationHostId!: bigint | null;

  @ApiProperty({
    required: false,
    type: () => [AssetConfigurationDetail],
  })
  @ValidateNested()
  @Type(() => AssetConfigurationDetail)
  @IsOptional()
  assetConfigurationDetails?: Array<AssetConfigurationDetail>;

  @ApiProperty({
    required: false,
    type: () => [AssetLocationDetail],
  })
  @ValidateNested()
  @Type(() => AssetLocationDetail)
  @IsOptional()
  assetLocationDetails?: Array<AssetLocationDetail>;

  @ApiProperty({
    required: false,
    type: () => [AssetNetworkDetail],
  })
  @ValidateNested()
  @Type(() => AssetNetworkDetail)
  @IsOptional()
  assetNetworkDetails?: Array<AssetNetworkDetail>;

  @ApiProperty({
    required: false,
    type: () => [AssetSupportDetail],
  })
  @ValidateNested()
  @Type(() => AssetSupportDetail)
  @IsOptional()
  assetSupportDetails?: Array<AssetSupportDetail>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assigned!: string | null;

  @ApiProperty({
    required: false,
    type: () => [AttestationHost],
  })
  @ValidateNested()
  @Type(() => AttestationHost)
  @IsOptional()
  attestationHost?: Array<AttestationHost>;

  @ApiProperty({
    required: false,
    type: () => [BigfixRequest],
  })
  @ValidateNested()
  @Type(() => BigfixRequest)
  @IsOptional()
  bigfixRequest?: Array<BigfixRequest>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  created!: Date;

  @ApiProperty({
    required: false,
    type: () => [DatasourceDevice],
  })
  @ValidateNested()
  @Type(() => DatasourceDevice)
  @IsOptional()
  datasourceDevices?: Array<DatasourceDevice>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    type: () => EndpointManagementSolution,
  })
  @ValidateNested()
  @Type(() => EndpointManagementSolution)
  @IsOptional()
  endpointManagementSolution?: EndpointManagementSolution | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  enterpriseId!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Exception],
  })
  @ValidateNested()
  @Type(() => Exception)
  @IsOptional()
  exception?: Array<Exception>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => GraphQLBigInt)
  id!: bigint;

  @ApiProperty({
    required: false,
    type: () => [IpAddress],
  })
  @ValidateNested()
  @Type(() => IpAddress)
  @IsOptional()
  ipAddress?: Array<IpAddress>;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isLocked!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isShared!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [MaintenanceWindow],
  })
  @ValidateNested()
  @Type(() => MaintenanceWindow)
  @IsOptional()
  maintenanceWindow?: Array<MaintenanceWindow>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    type: () => [OperationsCalendar],
  })
  @ValidateNested()
  @Type(() => OperationsCalendar)
  @IsOptional()
  operationsCalendar?: Array<OperationsCalendar>;

  @ApiProperty({
    required: false,
    type: () => [RebootWindow],
  })
  @ValidateNested()
  @Type(() => RebootWindow)
  @IsOptional()
  rebootWindow?: Array<RebootWindow>;

  @ApiProperty({
    required: false,
    type: () => [SubMgmtChangeLog],
  })
  @ValidateNested()
  @Type(() => SubMgmtChangeLog)
  @IsOptional()
  subMgmtChangeLog?: Array<SubMgmtChangeLog>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  systemBackupId!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  systemCitrixId!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tag!: string | null;

  @ApiProperty({
    required: false,
    type: () => [TssChangeLog],
  })
  @ValidateNested()
  @Type(() => TssChangeLog)
  @IsOptional()
  tssChangeLog?: Array<TssChangeLog>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updated!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  updatedBy!: string;
}

export { Asset as Asset };
