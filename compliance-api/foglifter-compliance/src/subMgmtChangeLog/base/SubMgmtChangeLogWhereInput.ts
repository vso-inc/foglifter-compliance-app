/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { AssetWhereUniqueInput } from "../../asset/base/AssetWhereUniqueInput";
import { BigfixRequestWhereUniqueInput } from "../../bigfixRequest/base/BigfixRequestWhereUniqueInput";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { IntFilter } from "../../util/IntFilter";
import { SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter } from "../../subMgmtBigfixRequestPatchChannelIncludeList/base/SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter";
import { SubMgmtChangeLogStatusWhereUniqueInput } from "../../subMgmtChangeLogStatus/base/SubMgmtChangeLogStatusWhereUniqueInput";

@InputType()
class SubMgmtChangeLogWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  action?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => AssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AssetWhereUniqueInput)
  @IsOptional()
  @Field(() => AssetWhereUniqueInput, {
    nullable: true,
  })
  asset?: AssetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => BigfixRequestWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BigfixRequestWhereUniqueInput)
  @IsOptional()
  @Field(() => BigfixRequestWhereUniqueInput, {
    nullable: true,
  })
  bigfixRequest?: BigfixRequestWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  created?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  hostname?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  patchChannelIncludeList?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter)
  @IsOptional()
  @Field(() => SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter, {
    nullable: true,
  })
  subMgmtBigfixRequestPatchChannelIncludeList?: SubMgmtBigfixRequestPatchChannelIncludeListListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SubMgmtChangeLogStatusWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubMgmtChangeLogStatusWhereUniqueInput)
  @IsOptional()
  @Field(() => SubMgmtChangeLogStatusWhereUniqueInput, {
    nullable: true,
  })
  subMgmtChangeLogStatus?: SubMgmtChangeLogStatusWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updated?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  updatedBy?: StringFilter;
}

export { SubMgmtChangeLogWhereInput as SubMgmtChangeLogWhereInput };
